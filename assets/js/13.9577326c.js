(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{340:function(s,e,n){"use strict";n.r(e);var t=n(3),a=Object(t.a)({},function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("异步编程的一种解决方案，解决回调函数多层嵌套的问题，即callback问题。\nES6将其写入了语言标准，提供了Promise对象。")]),s._v(" "),n("h2",{attrs:{id:"三种状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三种状态","aria-hidden":"true"}},[s._v("#")]),s._v(" 三种状态")]),s._v(" "),n("p",[s._v("pending(进行中)、fulfilled(已成功)、rejected(已失败)")]),s._v(" "),n("h2",{attrs:{id:"特点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特点","aria-hidden":"true"}},[s._v("#")]),s._v(" 特点")]),s._v(" "),n("ol",[n("li",[s._v("对象的状态不受外界影响，这也就是Promise起名的来源；")]),s._v(" "),n("li",[s._v("一旦状态改变，就不会再变，任何时候都可以得到这个结果。")])]),s._v(" "),n("h2",{attrs:{id:"缺点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#缺点","aria-hidden":"true"}},[s._v("#")]),s._v(" 缺点")]),s._v(" "),n("ol",[n("li",[s._v("无法取消Promise，一旦新建它就会立即执行，无法中途取消；")]),s._v(" "),n("li",[s._v("如果不设置回调函数，不会抛出Promise的内部错误；")]),s._v(" "),n("li",[s._v("当处于pending状态时，无法得知目前进展到那个阶段。")])]),s._v(" "),n("h2",{attrs:{id:"基本用法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#基本用法","aria-hidden":"true"}},[s._v("#")]),s._v(" 基本用法")]),s._v(" "),n("p",[s._v("Promise对象是一个构造函数，用来生成Promise实例。")]),s._v(" "),n("blockquote",[n("p",[s._v("生成实例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const promise = new Promise(function(resolve, reject){\n    // 一些操作\n    if(/*异步操作成功*/){\n        resolve(value);\n    } else {\n        reject(error);\n    }\n});\n/*箭头函数写法*/\nconst promise = new Promise((resolve, reject) => {\n    // 一些操作\n    if(/*异步操作成功*/){\n        resolve(value);\n    } else {\n        reject(error);\n    }\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("p",[s._v("Promise构造函数接受一个函数作为参数，这个函数又有两个参数resolve和reject,这两个参数也是函数，由JS引擎提供。\nreslove是异步操作调用成功时调用，并将操作结果作为参数传递出去；\nreject是异步操作失败时调用，并将错误作为参数传递出去。")]),s._v(" "),n("blockquote",[n("p",[s._v("实例调用")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("let promise = new Promise((resolve, reject) => {\n    console.log('Promise');\n    resolve();\n});\npromise.then(()=>{\n    console.log('resolve');\n},()=>{\n    console.log('reject');\n});\nconsole.log('Hi');\n\n// 执行结果：\n// Promise\n// Hi\n// resolve\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"promise方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise方法","aria-hidden":"true"}},[s._v("#")]),s._v(" Promise方法")]),s._v(" "),n("blockquote",[n("p",[s._v("then")])]),s._v(" "),n("p",[s._v("then方法的第一个参数是resolved状态的回调函数，第二个参数（可选）是rejected状态的回调函数。\nthen方法返回的是一个新的Promise实例（注意，不是原来那个Promise实例）。")]),s._v(" "),n("blockquote",[n("p",[s._v("catch")])]),s._v(" "),n("p",[s._v("Promise.prototype.catch()方法是.then(null, rejection)或.then(undefined, rejection)的别名，用于指定发生错误时的回调函数。\nPromise对象的错误具有‘冒泡’性质，会一直向后传递，直到被捕获为止。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("getJSON('/post/1.json').then(function(post) {\n  return getJSON(post.commentURL);\n}).then(function(comments) {\n  // some code\n}).catch(function(error) {\n  // 处理前面三个Promise产生的错误\n});\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("建议：不要在then中处理Reject状态的回调函数，使用catch方法处理。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// bad\npromise\n  .then(function(data) {\n    // success\n  }, function(err) {\n    // error\n  });\n\n// good\npromise\n  .then(function(data) {\n    // success\n  })\n  .catch(function(err) {\n    // error\n  });\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("blockquote",[n("p",[s._v("finally")])]),s._v(" "),n("p",[s._v("不管promise最后的状态，执行完then或catch指定的回调函数之后，肯定会调用finally指定的回调函数。")]),s._v(" "),n("blockquote",[n("p",[s._v("all")])]),s._v(" "),n("p",[s._v("将多个Promise实例包装成一个新的Promise实例。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const p = Promise.all([p1, p2, p3]);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("p的状态由p1、p2、p3决定，分成两种情况。\n（1）只有p1、p2、p3的状态都变成fulfilled，p的状态才会变成fulfilled，此时p1、p2、p3的返回值组成一个数组，传递给p的回调函数。\n（2）只要p1、p2、p3之中有一个被rejected，p的状态就变成rejected，此时第一个被reject的实例的返回值，会传递给p的回调函数。")]),s._v(" "),n("blockquote",[n("p",[s._v("race")])]),s._v(" "),n("p",[s._v("将多个Promise实例包装成一个新的Promise实例。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const p = Promise.all([p1, p2, p3]);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("只要p1、p2、p3之中有一个实例率先改变状态，p的状态就跟着改变。那个率先改变的 Promise 实例的返回值，就传递给p的回调函数。")]),s._v(" "),n("blockquote",[n("p",[s._v("allSettled")])]),s._v(" "),n("p",[s._v("将多个Promise实例包装成一个新的Promise实例。等到所有参数实例都返回结果（无论resloved还是rejected），才会结束。")]),s._v(" "),n("blockquote",[n("p",[s._v("reslove")])]),s._v(" "),n("p",[s._v("将现有对象转换成Promise对象。")]),s._v(" "),n("blockquote",[n("p",[s._v("reject")])]),s._v(" "),n("p",[s._v("返回一个rejected状态的Promise实例。")]),s._v(" "),n("h2",{attrs:{id:"promise应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#promise应用","aria-hidden":"true"}},[s._v("#")]),s._v(" Promise应用")]),s._v(" "),n("ul",[n("li",[s._v("优化层层嵌套的回调写法")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// 回调嵌套写法\nfunction test (callback){\n  callback('111');\n} \ntest((value)=>{\n  console.log('test'+value)\n});\n\n// Promise写法\nvar promise = new Promise((resolve)=>{\n  resolve('222')\n});\npromise.then((value)=>{\n  console.log('promise'+value)\n});\n\n// 执行结果：\n//\"test111\"\n//\"promise222\"\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("ul",[n("li",[s._v("实现Ajax")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//request处理,错误会reject回去,业务请求中需要处理失败结果用catch方式\nfunction reuqest(url, options = {}) {\n  //带上AppStoken参数\n\turl = _stitchUrlParam(url, 'app_stoken=' + getAppStoken());\n\treturn new Promise((resolve, reject) => {\n\t\twx.request({\n\t\t\turl: url,\n\t\t\theader: options.headers,\n\t\t\tdata: options.body || {},\n\t\t\tmethod: options.method,\n\t\t\tsuccess: function (res) {\n\t\t\t\tres = _parseData(res) || {};\n\t\t\t\tconst statusCode = res.statusCode,\n\t\t\t\t\tcode = res.data.code,\n\t\t\t\t\tmsg = statusCode != 200 ? constant.NETWORKERROR : res.data.msg\n\t\t\t\t/* 不在正确码、特殊码范围内报错*/\n\t\t\t\tif (statusCode != 200 || (!specialCode.includes(code))) {\n\t\t\t\t    //根据code做一些去登录页之类的处理\n\t\t\t\t\t_handelErrorByCode(code, msg) \n\t\t\t\t\treject(res.data)\n\t\t\t\t} else { //正确结果\n\t\t\t\t\tresolve(res)\n\t\t\t\t}\n\t\t\t},\n\t\t\tfail: function (res) {\n\t\t\t\tres = _parseData(res) || {}\n\t\t\t\twx.showToast({title: constant.NETWORKERROR, type: 'warn'});\n\t\t\t\treject(res);\n\t\t\t}\n\t\t});\n\t});\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])])])},[],!1,null,null,null);e.default=a.exports}}]);