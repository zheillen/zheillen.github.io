(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{338:function(n,s,t){"use strict";t.r(s);var e=t(3),a=Object(e.a)({},function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"q：写出代码打印结果，并解释"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#q：写出代码打印结果，并解释","aria-hidden":"true"}},[n._v("#")]),n._v(" Q：写出代码打印结果，并解释")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("function person(obj) {\n    obj.name = 'Jack';\n    obj = new Object();\n    obj.name = 'TOM';\n}\nlet student = new Object();\nperson(student);\nconsole.log(student.name);\n\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br")])]),t("h1",{attrs:{id:"a"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a","aria-hidden":"true"}},[n._v("#")]),n._v(" A:")]),n._v(" "),t("p",[n._v("解析：")]),n._v(" "),t("p",[n._v("对象作为参数，传递进去的是这个对象的地址，obj.name是给student这个对象赋值;obj = new Object(),把obj指向另一个对象，obj.name现在是给这个新对象赋值，不影响student这个变量指向的对象；两个obj指向的对象的引用地址不同。")]),n._v(" "),t("p",[n._v("ECMAScript中所有函数的参数都是按值传递的。也就是说，把函数外部的值复制给函数内部的参数，就和把值从一个变量复制到另一个变量一样。不过需要注意的是，基本类型的传递如同基本类型变量的复制一样，传递方式是按值传递，这意味着在函数体内修改参数的值，不会影响到函数外部。而引用类型的值传递，如同引用类型变量的复制一样，传递方式是按引用传递，也就是传入函数的是原始值的地址，因此在函数内部修改参数，将会影响到原始值。")])])},[],!1,null,null,null);s.default=a.exports}}]);